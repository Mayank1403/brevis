{"ast":null,"code":"var _jsxFileName = \"/home/smrnmakhija/part-3/src/App.js\";\nimport React from 'react';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      url: ''\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        url: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      console.log(this.state);\n      axios.post('/result', this.state).then(res => {\n        console.log(\"HHH\", res);\n        axios.get('/sendfile').then(response => {\n          console.log(\"III\", response);\n          var a = response.body.getReader();\n          a.read().then(({\n            done,\n            value\n          }) => {\n            // console.log(new TextDecoder(\"utf-8\").decode(value));\n            saveAsFile(new TextDecoder(\"utf-8\").decode(value), 'filename');\n          });\n        });\n      });\n    };\n\n    this.saveAsFile = (text, filename) => {\n      // Step 1: Create the blob object with the text you received\n      const type = 'application/text'; // modify or get it from response\n\n      const blob = new BlobBuilder([text], {\n        type\n      }); // Step 2: Create Blob Object URL for that blob\n\n      const url = URL.createObjectURL(blob); // Step 3: Trigger downloading the object using that URL\n\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      a.click(); // triggering it manually\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, \"Submit\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/smrnmakhija/part-3/src/App.js"],"names":["React","axios","App","Component","state","url","handleChange","event","setState","target","value","handleSubmit","console","log","post","then","res","get","response","a","body","getReader","read","done","saveAsFile","TextDecoder","decode","text","filename","type","blob","BlobBuilder","URL","createObjectURL","document","createElement","href","download","click","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEjCC,KAFiC,GAE3B;AACJC,MAAAA,GAAG,EAAC;AADA,KAF2B;;AAAA,SAKhCC,YALgC,GAKlBC,KAAD,IAAU;AACrB,WAAKC,QAAL,CAAc;AAACH,QAAAA,GAAG,EAACE,KAAK,CAACE,MAAN,CAAaC;AAAlB,OAAd;AACD,KAP+B;;AAAA,SAShCC,YATgC,GASlBJ,KAAD,IAAU;AACrBK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;AACAH,MAAAA,KAAK,CAACa,IAAN,CAAW,SAAX,EAAqB,KAAKV,KAA1B,EACCW,IADD,CACMC,GAAG,IAAE;AACTJ,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBG,GAAnB;AACAf,QAAAA,KAAK,CAACgB,GAAN,CAAU,WAAV,EACCF,IADD,CACMG,QAAQ,IAAE;AACdN,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBK,QAAlB;AACA,cAAIC,CAAC,GAAGD,QAAQ,CAACE,IAAT,CAAcC,SAAd,EAAR;AACAF,UAAAA,CAAC,CAACG,IAAF,GAASP,IAAT,CAAc,CAAC;AAAEQ,YAAAA,IAAF;AAAQb,YAAAA;AAAR,WAAD,KAAqB;AACnC;AACAc,YAAAA,UAAU,CAAC,IAAIC,WAAJ,CAAgB,OAAhB,EAAyBC,MAAzB,CAAgChB,KAAhC,CAAD,EAAyC,UAAzC,CAAV;AACC,WAHD;AAID,SARD;AASD,OAZD;AAaC,KAxB6B;;AAAA,SA0B7Bc,UA1B6B,GA0BlB,CAACG,IAAD,EAAOC,QAAP,KAAmB;AAC7B;AACA,YAAMC,IAAI,GAAG,kBAAb,CAF6B,CAEI;;AACjC,YAAMC,IAAI,GAAG,IAAIC,WAAJ,CAAgB,CAACJ,IAAD,CAAhB,EAAwB;AAACE,QAAAA;AAAD,OAAxB,CAAb,CAH6B,CAK7B;;AACA,YAAMxB,GAAG,GAAG2B,GAAG,CAACC,eAAJ,CAAoBH,IAApB,CAAZ,CAN6B,CAQ7B;;AACA,YAAMX,CAAC,GAAGe,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAV;AACAhB,MAAAA,CAAC,CAACiB,IAAF,GAAS/B,GAAT;AACAc,MAAAA,CAAC,CAACkB,QAAF,GAAaT,QAAb;AACAT,MAAAA,CAAC,CAACmB,KAAF,GAZ6B,CAYlB;AACZ,KAvC6B;AAAA;;AAyChCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKjC,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAQ,MAAA,OAAO,EAAE,KAAKK,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF;AAMD;;AAhD+B;;AAmDlC,eAAeT,GAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\n\nclass App extends React.Component {\n\n state={\n   url:''\n }\n  handleChange=(event)=> {\n    this.setState({url:event.target.value});\n  }\n\n  handleSubmit=(event)=> {\n    console.log(this.state)\n    axios.post('/result',this.state)\n    .then(res=>{\n      console.log(\"HHH\", res)\n      axios.get('/sendfile')\n      .then(response=>{\n        console.log(\"III\",response)\n        var a = response.body.getReader();\n        a.read().then(({ done, value }) => {\n        // console.log(new TextDecoder(\"utf-8\").decode(value));\n        saveAsFile(new TextDecoder(\"utf-8\").decode(value), 'filename');\n        });\n      })\n    })\n    }\n\n     saveAsFile=(text, filename)=> {\n      // Step 1: Create the blob object with the text you received\n      const type = 'application/text'; // modify or get it from response\n      const blob = new BlobBuilder([text], {type});\n    \n      // Step 2: Create Blob Object URL for that blob\n      const url = URL.createObjectURL(blob);\n    \n      // Step 3: Trigger downloading the object using that URL\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      a.click(); // triggering it manually\n    }\n\n  render() {\n    return (\n      <div>\n        <input type=\"text\" onChange={this.handleChange}></input>\n        <button onClick={this.handleSubmit}>Submit</button>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}